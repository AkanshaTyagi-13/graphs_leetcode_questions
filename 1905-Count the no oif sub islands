class Solution {
    public boolean dfs(int[][]grid1,int[][] grid2, int i,int j){
        if(i<0||i>=grid1.length||j<0||j>=grid1[0].length||grid2[i][j]!=1){
            return true;
        }
        grid2[i][j]=0;
        boolean isValid=grid1[i][j]==1;
        boolean down=dfs(grid1,grid2,i+1,j);
        boolean up=dfs(grid1,grid2,i-1,j);
        boolean right=dfs(grid1,grid2,i,j+1);
        boolean left=dfs(grid1,grid2,i,j-1);
        return isValid&&up&&down&&right&&left;
    }
    public int countSubIslands(int[][] grid1, int[][] grid2) {
        if(grid1==null||grid2==null||grid1.length==0||grid2.length==0){
            return 0;
        }
        int cnt=0;
        for(int i=0;i<grid1.length;i++){
            for(int j=0;j<grid1[0].length;j++){
                if(grid2[i][j]==1){
                    if(dfs(grid1,grid2,i,j)){
                        cnt++;
                    }
                }
            }
        }
        return cnt;
    }
}
